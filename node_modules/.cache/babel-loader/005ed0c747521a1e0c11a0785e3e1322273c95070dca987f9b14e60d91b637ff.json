{"ast":null,"code":"var _jsxFileName = \"/home/arunkrish/NetflixClone/src/Components/RowPoster/RowPoster.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../../axios';\nimport './RowPoster.css';\nimport { API_KEY, imgeUrl } from '../../constansts/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPoster() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    axios.get(`discover/tv?api_key=${API_KEY}&with_networks=213`).then(response => {\n      console.log(response.data.results[0]);\n      setMovies(response.data.results);\n    }).catch(error => {\n      alert('Network error. Please try again!');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row_poster\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"poster\",\n        src: ` ${imgeUrl}${movie ? movie.poster_path : 'Loadi'}`,\n        alt: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n}\n_s(RowPoster, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = RowPoster;\nexport default RowPoster;\nvar _c;\n$RefreshReg$(_c, \"RowPoster\");","map":{"version":3,"names":["React","useEffect","useState","axios","API_KEY","imgeUrl","jsxDEV","_jsxDEV","RowPoster","_s","movies","setMovies","get","then","response","console","log","data","results","catch","error","alert","className","children","map","movie","src","poster_path","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/arunkrish/NetflixClone/src/Components/RowPoster/RowPoster.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from '../../axios'\nimport './RowPoster.css'\nimport { API_KEY,imgeUrl } from '../../constansts/constants'\n\nfunction RowPoster() {\n  const [movies, setMovies] = useState([])\n  useEffect(() => {\n    axios.get(`discover/tv?api_key=${API_KEY}&with_networks=213` ).then((response) => {\n      console.log(response.data.results[0] )\n      setMovies(response.data.results)\n    }).catch((error) => {\n      alert('Network error. Please try again!')\n    })\n  },[])\n  return (\n      <div className='row_poster'>\n        <div className=\"posters\">\n           {movies.map((movie) => (\n            <img className='poster' src={` ${imgeUrl}${movie ? movie.poster_path : 'Loadi'}`} alt={movie.name} />\n          ))}\n        </div>\n      </div>\n  )\n}\n\nexport default RowPoster\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,iBAAiB;AACxB,SAASC,OAAO,EAACC,OAAO,QAAQ,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxCD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACS,GAAG,CAAC,uBAAuBR,OAAO,oBAAqB,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAK;MAChFC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAE,CAAC;MACtCP,SAAS,CAACG,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAClBC,KAAK,CAAC,kCAAkC,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EACL,oBACId,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBhB,OAAA;MAAKe,SAAS,EAAC,SAAS;MAAAC,QAAA,EACpBb,MAAM,CAACc,GAAG,CAAEC,KAAK,iBACjBlB,OAAA;QAAKe,SAAS,EAAC,QAAQ;QAACI,GAAG,EAAE,IAAIrB,OAAO,GAAGoB,KAAK,GAAGA,KAAK,CAACE,WAAW,GAAG,OAAO,EAAG;QAACC,GAAG,EAAEH,KAAK,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACrG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACxB,EAAA,CAnBQD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAqBlB,eAAeA,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}