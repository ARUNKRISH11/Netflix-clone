{"ast":null,"code":"var _jsxFileName = \"/home/arunkrish/NetflixClone/src/Components/RowPoster/RowPoster.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport YouTube from 'react-youtube';\nimport axios from '../../axios';\nimport './RowPoster.css';\nimport { imgeUrl } from '../../constansts/constants';\n\n// props for each row component, which contain title and url\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPoster(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [UrlId, setId] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      setMovies(response.data.results);\n    }).catch(err => {\n      alert('Network error. Please try again!');\n    });\n  }, []);\n  const handleClick = id => {\n    console.log(id);\n    setId(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row_poster\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(movie =>\n      /*#__PURE__*/\n      // Using dynamic class name\n      _jsxDEV(\"img\", {\n        onClick: () => handleClick(movie.id),\n        className: props.isSmall ? 'small-poster' : 'poster',\n        src: `${imgeUrl}${movie.poster_path}: 'Loading'}`,\n        alt: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: \"2g811Eo7K8U\",\n      opts: {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          autoplay: 0\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n_s(RowPoster, \"TFxsGSiLpz0UWQAnvpt5Gxm5rTs=\");\n_c = RowPoster;\nexport default RowPoster;\nvar _c;\n$RefreshReg$(_c, \"RowPoster\");","map":{"version":3,"names":["React","useEffect","useState","YouTube","axios","imgeUrl","jsxDEV","_jsxDEV","RowPoster","props","_s","movies","setMovies","UrlId","setId","get","url","then","response","data","results","catch","err","alert","handleClick","id","console","log","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","onClick","isSmall","src","poster_path","alt","name","videoId","opts","height","width","playerVars","autoplay","_c","$RefreshReg$"],"sources":["/home/arunkrish/NetflixClone/src/Components/RowPoster/RowPoster.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport YouTube from 'react-youtube'\nimport axios from '../../axios'\nimport './RowPoster.css'\nimport { imgeUrl } from '../../constansts/constants'\n\n// props for each row component, which contain title and url\nfunction RowPoster(props) {\n  const [movies, setMovies] = useState([])\n  const [UrlId, setId] = useState('')\n  useEffect(() => {\n    axios.get(props.url).then((response) => {\n      setMovies(response.data.results)\n    }).catch((err) => {\n      alert('Network error. Please try again!')\n    })\n  },[])\n  const handleClick = (id) => {\n    console.log(id);\n    setId(id)\n  }\n  return (\n      <div className='row_poster'>\n        <h3>{props.title}</h3> \n        <div className=\"posters\">\n           {movies.map((movie) => (\n            // Using dynamic class name\n            <img onClick={() => handleClick(movie.id)} className={ props.isSmall ? 'small-poster' : 'poster'} src={ `${imgeUrl}${movie.poster_path}: 'Loading'}`} alt={movie.name} />\n          ))}\n        </div>\n        <YouTube videoId=\"2g811Eo7K8U\" opts={{height: '390', width: '100%', playerVars: {autoplay: 0}}} />\n      </div>\n  )\n}\n\nexport default RowPoster\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,iBAAiB;AACxB,SAASC,OAAO,QAAQ,4BAA4B;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,KAAK,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACnCD,SAAS,CAAC,MAAM;IACdG,KAAK,CAACW,GAAG,CAACN,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACtCN,SAAS,CAACM,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;MAChBC,KAAK,CAAC,kCAAkC,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EACL,MAAMC,WAAW,GAAIC,EAAE,IAAK;IAC1BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACfX,KAAK,CAACW,EAAE,CAAC;EACX,CAAC;EACD,oBACIlB,OAAA;IAAKqB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBtB,OAAA;MAAAsB,QAAA,EAAKpB,KAAK,CAACqB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtB3B,OAAA;MAAKqB,SAAS,EAAC,SAAS;MAAAC,QAAA,EACpBlB,MAAM,CAACwB,GAAG,CAAEC,KAAK;MAAA;MACjB;MACA7B,OAAA;QAAK8B,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACY,KAAK,CAACX,EAAE,CAAE;QAACG,SAAS,EAAGnB,KAAK,CAAC6B,OAAO,GAAG,cAAc,GAAG,QAAS;QAACC,GAAG,EAAG,GAAGlC,OAAO,GAAG+B,KAAK,CAACI,WAAW,cAAe;QAACC,GAAG,EAAEL,KAAK,CAACM;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACzK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN3B,OAAA,CAACJ,OAAO;MAACwC,OAAO,EAAC,aAAa;MAACC,IAAI,EAAE;QAACC,MAAM,EAAE,KAAK;QAAEC,KAAK,EAAE,MAAM;QAAEC,UAAU,EAAE;UAACC,QAAQ,EAAE;QAAC;MAAC;IAAE;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/F,CAAC;AAEZ;AAACxB,EAAA,CA1BQF,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AA4BlB,eAAeA,SAAS;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}